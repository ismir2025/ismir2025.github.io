{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport { computed } from 'vue';\nimport { useDisplay } from 'vuetify';\nexport default {\n  __name: 'BaseHeading',\n  props: {\n    align: {\n      type: String,\n      default: 'left'\n    },\n    dense: {\n      type: Boolean\n    },\n    size: {\n      type: String,\n      default: 'text-h3'\n    },\n    space: {\n      type: [Number, String],\n      default: 4\n    },\n    mobileSize: {\n      type: String,\n      default: 'text-h4'\n    },\n    mobileBreakpoint: {\n      type: [Number, String],\n      default: 768\n    },\n    tag: {\n      type: String,\n      default: 'h1'\n    },\n    title: String,\n    weight: {\n      type: String,\n      default: 'black'\n    },\n    color: String\n  },\n  setup(__props) {\n    const display = useDisplay();\n    const props = __props;\n    const classes = computed(() => {\n      return [fontSize.value, `font-weight-${props.weight}`, `mb-${props.space}`, `text-${props.align}`, props.color && `text-${props.color}`];\n    });\n    const fontSize = computed(() => {\n      return display.width.value >= props.mobileBreakpoint ? props.size : props.mobileSize;\n    });\n    return (_ctx, _cache) => {\n      return __props.title ? (_openBlock(), _createBlock(_resolveDynamicComponent(__props.tag), {\n        key: 0,\n        class: _normalizeClass(classes.value)\n      }, {\n        default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\"), _createTextVNode(_toDisplayString(__props.title), 1)]),\n        _: 3\n      }, 8, [\"class\"])) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["computed","useDisplay","display","props","__props","classes","fontSize","value","weight","space","align","color","width","mobileBreakpoint","size","mobileSize"],"sources":["/Users/jhbae/goose2025/src/components/base/BaseHeading.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    v-if=\"title\"\n    :class=\"classes\"\n  >\n    <slot />{{ title }}\n  </component>\n</template>\n\n<script setup>\nimport { defineProps, computed } from 'vue';\nimport { useDisplay } from 'vuetify';\n  const display = useDisplay()\n\n  const props = defineProps({\n    align: {\n      type: String,\n      default: 'left',\n    },\n    dense: {\n      type: Boolean,\n    },\n    size: {\n      type: String,\n      default: 'text-h3',\n    },\n    space: {\n      type: [Number, String],\n      default: 4,\n    },\n    mobileSize: {\n      type: String,\n      default: 'text-h4',\n    },\n    mobileBreakpoint: {\n      type: [Number, String],\n      default: 768,\n    },\n    tag: {\n      type: String,\n      default: 'h1',\n    },\n    title: String,\n    weight: {\n      type: String,\n      default: 'black',\n    },\n    color: String,\n  })\n\n  const classes = computed(() => {\n    return [\n      fontSize.value,\n      `font-weight-${props.weight}`,\n      `mb-${props.space}`,\n      `text-${props.align}`,\n      props.color && `text-${props.color}`,\n    ]\n  })\n  const fontSize = computed(() => {\n    return display.width.value >= props.mobileBreakpoint\n      ? props.size\n      : props.mobileSize\n  })\n</script>\n"],"mappings":";AAWA,SAAsBA,QAAQ,QAAQ,KAAK;AAC3C,SAASC,UAAU,QAAQ,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAClC,MAAMC,OAAO,GAAGD,UAAU,CAAC;IAE3B,MAAME,KAAK,GAAGC,OAAA;IAoCd,MAAMC,OAAO,GAAGL,QAAQ,CAAC,MAAM;MAC7B,OAAO,CACLM,QAAQ,CAACC,KAAK,EACd,eAAeJ,KAAK,CAACK,MAAM,EAAE,EAC7B,MAAML,KAAK,CAACM,KAAK,EAAE,EACnB,QAAQN,KAAK,CAACO,KAAK,EAAE,EACrBP,KAAK,CAACQ,KAAK,IAAI,QAAQR,KAAK,CAACQ,KAAK,EAAE,CACtC;IACF,CAAC;IACD,MAAML,QAAQ,GAAGN,QAAQ,CAAC,MAAM;MAC9B,OAAOE,OAAO,CAACU,KAAK,CAACL,KAAK,IAAIJ,KAAK,CAACU,gBAAe,GAC/CV,KAAK,CAACW,IAAG,GACTX,KAAK,CAACY,UAAS;IACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}