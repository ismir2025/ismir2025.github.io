{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.title ? (_openBlock(), _createBlock(_resolveDynamicComponent($props.tag), {\n    key: 0,\n    class: _normalizeClass($setup.classes)\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\"), _createTextVNode(_toDisplayString($props.title), 1 /* TEXT */)]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"class\"])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$props","title","_createBlock","_resolveDynamicComponent","tag","key","class","_normalizeClass","$setup","classes","default","_withCtx","_renderSlot","_ctx","$slots","_createTextVNode","_toDisplayString","_","_createCommentVNode"],"sources":["/Users/jhbae/goose2025/src/components/base/BaseHeading.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    v-if=\"title\"\n    :class=\"classes\"\n  >\n    <slot />{{ title }}\n  </component>\n</template>\n\n<script setup>\nimport { defineProps, computed } from 'vue';\nimport { useDisplay } from 'vuetify';\n  const display = useDisplay()\n\n  const props = defineProps({\n    align: {\n      type: String,\n      default: 'left',\n    },\n    dense: {\n      type: Boolean,\n    },\n    size: {\n      type: String,\n      default: 'text-h3',\n    },\n    space: {\n      type: [Number, String],\n      default: 4,\n    },\n    mobileSize: {\n      type: String,\n      default: 'text-h4',\n    },\n    mobileBreakpoint: {\n      type: [Number, String],\n      default: 768,\n    },\n    tag: {\n      type: String,\n      default: 'h1',\n    },\n    title: String,\n    weight: {\n      type: String,\n      default: 'black',\n    },\n    color: String,\n  })\n\n  const classes = computed(() => {\n    return [\n      fontSize.value,\n      `font-weight-${props.weight}`,\n      `mb-${props.space}`,\n      `text-${props.align}`,\n      props.color && `text-${props.color}`,\n    ]\n  })\n  const fontSize = computed(() => {\n    return display.width.value >= props.mobileBreakpoint\n      ? props.size\n      : props.mobileSize\n  })\n</script>\n"],"mappings":";;SAGUA,MAAA,CAAAC,KAAK,I,cAFbC,YAAA,CAMYC,wBAPd,CAESH,MAAA,CAAAI,GAAG;IAFZC,GAAA;IAIKC,KAAK,EAJVC,eAAA,CAIYC,MAAA,CAAAC,OAAO;;IAJnBC,OAAA,EAAAC,QAAA,CAMI,MAAQ,CAARC,WAAA,CAAQC,IAAA,CAAAC,MAAA,cANZC,gBAAA,CAAAC,gBAAA,CAMehB,MAAA,CAAAC,KAAK,iB;IANpBgB,CAAA;kCAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}