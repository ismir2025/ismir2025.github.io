{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderSlot as _renderSlot, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"innerHTML\"];\nconst _hoisted_2 = [\"textContent\"];\nimport { computed, inject } from 'vue'; // inject �߰�\n\nexport default {\n  __name: 'BaseBody',\n  props: {\n    html: String,\n    maxWidth: {\n      type: [Number, String],\n      default: undefined\n    },\n    space: {\n      type: [Number, String],\n      default: 10\n    },\n    tag: {\n      type: String,\n      default: 'p'\n    },\n    text: String,\n    align: {\n      type: String,\n      default: 'left'\n    },\n    fontSize: {\n      type: String,\n      default: '16px' // ?? ?? ??\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const theme = inject('theme', {\n      isDark: false\n    });\n    const classes = computed(() => {\n      return ['grey--text', theme?.isDark ? 'text-lighten-1' : 'text-darken-1', `text-${props.align}`, `mb-${props.space}`];\n    });\n    const styles = computed(() => {\n      return {\n        maxWidth: `${props.maxWidth}px`,\n        fontSize: `${props.fontSize} !important` // ??? ?? ?? ??\n      };\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_resolveDynamicComponent(__props.tag), {\n        class: _normalizeClass([classes.value, \"base-body text-body-1\"]),\n        style: _normalizeStyle(styles.value)\n      }, {\n        default: _withCtx(() => [__props.html ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          innerHTML: __props.html\n        }, null, 8, _hoisted_1)) : __props.text ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          textContent: _toDisplayString(__props.text)\n        }, null, 8, _hoisted_2)) : _renderSlot(_ctx.$slots, \"default\", {\n          key: 2\n        })]),\n        _: 3\n      }, 8, [\"class\", \"style\"]);\n    };\n  }\n};","map":{"version":3,"names":["computed","inject","props","__props","theme","isDark","classes","align","space","styles","maxWidth","fontSize"],"sources":["/Users/jhbae/goose2025/src/components/base/BaseBody.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"classes\"\n    :style=\"styles\"\n    class=\"base-body text-body-1\"\n  >\n\n    <!-- Only use v-html for user data -->\n    <div\n      v-if=\"html\"\n      v-html=\"html\"\n    />\n    <div\n      v-else-if=\"text\"\n      v-text=\"text\"\n    />\n\n    <slot v-else />\n  </component>\n</template>\n\n<script setup>\nimport { defineProps, computed, inject } from 'vue'; // inject �߰�\n\n\nconst props = defineProps({\n  html: String,\n  maxWidth: {\n    type: [Number, String],\n    default: undefined,\n  },\n  space: {\n    type: [Number, String],\n    default: 10,\n  },\n  tag: {\n    type: String,\n    default: 'p',\n  },\n  text: String,\n  align: {\n    type: String,\n    default: 'left',\n  },\n  fontSize: {\n    type: String,\n    default: '16px', // ?? ?? ??\n  },\n})\n\n  const theme = inject('theme', { isDark: false })\n\n  const classes = computed(() => {\n    return [\n      'grey--text',\n      theme?.isDark ? 'text-lighten-1' : 'text-darken-1',\n      `text-${props.align}`,\n      `mb-${props.space}`,\n    ]\n  })\n\n  const styles = computed(() => {\n  return {\n    maxWidth: `${props.maxWidth}px`,\n    fontSize: `${props.fontSize} !important`, // ??? ?? ?? ??\n  }\n})\n\n</script>\n"],"mappings":";;;AAuBA,SAAsBA,QAAQ,EAAEC,MAAM,QAAQ,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGrD,MAAMC,KAAK,GAAGC,OAAA;IAyBZ,MAAMC,KAAK,GAAGH,MAAM,CAAC,OAAO,EAAE;MAAEI,MAAM,EAAE;IAAM,CAAC;IAE/C,MAAMC,OAAO,GAAGN,QAAQ,CAAC,MAAM;MAC7B,OAAO,CACL,YAAY,EACZI,KAAK,EAAEC,MAAM,GAAG,gBAAgB,GAAG,eAAe,EAClD,QAAQH,KAAK,CAACK,KAAK,EAAE,EACrB,MAAML,KAAK,CAACM,KAAK,EAAE,CACrB;IACF,CAAC;IAED,MAAMC,MAAM,GAAGT,QAAQ,CAAC,MAAM;MAC9B,OAAO;QACLU,QAAQ,EAAE,GAAGR,KAAK,CAACQ,QAAQ,IAAI;QAC/BC,QAAQ,EAAE,GAAGT,KAAK,CAACS,QAAQ,aAAa,CAAE;MAC5C;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}